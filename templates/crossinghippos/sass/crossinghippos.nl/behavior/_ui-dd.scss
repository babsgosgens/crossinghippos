/*
*****************************************************************************
SUCKERFISH STYLE DROPDOWN
*****************************************************************************
*/


/*
-----------------------------------------------------------------------------
BASIC MARKUP
A container div with class "ui-dropdown" and a unique id. 
	* the id allows the menu to be used without Javascript
A trigger (can be placed outside the containing div, 
but then you need to specify the context of the targeted element):
	* attributes data-target and data-context default to data-target=".ui-dropdown__item"
	  and data-context=".ui-dropdown" and can be omitted unless target or context are different
A target element (can be anything)
	* state classes can be replaced

SUPPORTING JAVASCRIPT

This behavior requires a jQuery plugin: toggleStateClass();

The behavior is supported with a jQuery plugin that can be passed a configuration 
object (example values are the plugin's default values):
	{   triggerEvent: "click",
        target: ".ui-dropdown__item",
        targetContext: ".ui-dropdown",
        activeClass: "ui-dropdown__item--active",
        inactiveClass: "ui-dropdown__item--inactive"   }
-----------------------------------------------------------------------------
  <div id="dropdown" class="ui-dropdown">
    <a href="#dropdown" class="ui-dropdown__trigger" data-target=".ui-dropdown__item" data-context=".ui-dropdown">Trigger</a>
    <div class="ui-dropdown__item ui-dropdown__item--inactive">Inactive item</div>
    <div class="ui-dropdown__item ui-dropdown__item--active">Active Item</div>
  </div>
-----------------------------------------------------------------------------
*/

.ui-dropdown {
	// overflow: hidden;
	position: relative;
	&:target {
		@extend .ui-dropdown--state_target !optional;
	}
}
	.ui-dropdown--state_target {
		/* special styling for targeted menu trigger */
		.ui-dropdown__trigger {
		}
	}

	.ui-dropdown__trigger {
	}

		.ui-dropdown__item {
			z-index: 10;
		}

		.ui-dropdown__item--inactive {
			@include hide();
		}

		.ui-dropdown__item--active {
			@include show(relative);
		}

		/* no-js fallback */
		.no-js :target>.ui-dropdown {
			@extend .ui-dropdown__item--active;
		}


	/*
	-----------------------------------------------------------------------------
	No-JS fallback
	-----------------------------------------------------------------------------
	*/

	.no-js .ui-dropdown {
		&>.btn-dropdown {
			@include hide();
		}
		&:hover {
			&>.btn-dropdown {
				@include show();
			}
		}
	}